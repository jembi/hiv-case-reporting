input {
  pipeline {
    address => "fhir-episode-of-care"
  }
}

filter {
  # TODO identify resource

  # get identifiers
  ruby {
    code => '
      entryToCareUID = event.get("[resource][identifier]")
        .find { |x| x["system"] == "http://openhie.org/fhir/hiv-casereporting/identifier/enrollment-unique-id" }
      event.set("[entryToCare][UID]", entryToCareUID["value"])
    '
  }

  # get enrollment date
  mutate {
    add_field => {
      "[entryToCare][enrollmentDate]" => "%{[resource][period][start]}"
    }
  }

  # enrich with facility details
  mutate {
    add_field => {
      "[entryToCare][facilityID]" => "%{[resource][managingOrganization][reference]}"
    }
  }

  mutate {
    gsub => ["[entryToCare][facilityID]", "Organization/", ""]
  }

  elasticsearch {
    hosts => [ "es-analytics:9200" ]
    user => "elastic"
    password => "dev_password_only"
    index => "fhir-raw-organization"
    query => "resource.id:%{[entryToCare][facilityID]}"
    fields => {
      "[resource][address]" => "[@metadata][address]"
      "[resource][name]" => "[entryToCare][facility][name]"
      "[resource][identifier]" => "[@metadata][identifier]"
    }
    add_field => {
      "[entryToCare][facility][country]" => "%{[@metadata][address][0][country]}"
      "[entryToCare][facility][state]" => "%{[@metadata][address][0][state]}"
      "[entryToCare][facility][district]" => "%{[@metadata][address][0][district]}"
      "[entryToCare][facility][city]" => "%{[@metadata][address][0][city]}"
    }
  }

  ruby {
    code => '
      identifiers = event.get("[@metadata][identifier]")
      facilityCode = identifiers.find { |x| x["system"] == "http://test.org/identifier/hiv-organization"}["value"]
      event.set("[entryToCare][facilityCode]", facilityCode)
    '
  }

  elasticsearch {
    hosts => [ "es-analytics:9200" ]
    user => "elastic"
    password => "dev_password_only"
    index => "fhir-raw-location"
    query => "resource.identifier.value:%{[entryToCare][facilityCode]}"
    fields => {
      "[resource][position]" => "[entryToCare][facility][position]"
    }
    remove_field => ["[entryToCare][facilityID]"]
  }

  mutate {
    rename => {
      "[entryToCare][facility][position][latitude]" => "[entryToCare][facility][position][lat]"
      "[entryToCare][facility][position][longitude]" => "[entryToCare][facility][position][lon]"
    }
  }

  # set document id
  mutate {
    add_field => {
      "patient" => "%{[resource][patient][reference]}"
    }
  }

  mutate {
    gsub => [ "patient", "http://opencr:3000/fhir/", "" ]
  }

  mutate {
    gsub => ["patient", "Patient/", ""]
  }

  mutate {
    add_field => {
      "[@metadata][id]" => "report-patient-%{[patient]}"
    }
  }

  # clean up
  prune {
    whitelist_names => [ "entryToCare", "@timestamp" ]
  }
}

output {
  elasticsearch {
    hosts => [ "es-analytics:9200" ]
    index => "fhir-report-patient"
    document_id => "%{[@metadata][id]}"
    action => "update"
    doc_as_upsert => true
    user => "elastic"
    password => "dev_password_only"
  }
}
