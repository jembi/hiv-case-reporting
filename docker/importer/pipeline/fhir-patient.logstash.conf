input {
  pipeline {
    address => "fhir-patient"
  }
}

filter {
  if [resource][meta][tag][0][display] == "Golden Record" {
    drop { }
  }

  # add fingerprint of patient golden ID
  mutate {
    copy => { "[resource][link][0][other][reference]" => "[@metadata][golden_id_fingerprint]" }
  }
  mutate {
    gsub => [ "[@metadata][golden_id_fingerprint]", "Patient/", "" ]
  }
  fingerprint {
    source => "[@metadata][golden_id_fingerprint]"
    target => "[registration][golden_id_fingerprint]"
  }

  # add basic demographics
  mutate {
    add_field => {
      "[registration][firstName]" => "%{[resource][name][0][given][0]}"
      "[registration][lastName]" => "%{[resource][name][0][family]}"
      "[registration][gender]" => "%{[resource][gender]}"
      "[registration][birthDate]" => "%{[resource][birthDate]}"
      "[registration][address][country]" => "%{[resource][address][0][country]}"
      "[registration][address][state]" => "%{[resource][address][0][state]}"
      "[registration][address][district]" => "%{[resource][address][0][district]}"
      "[registration][address][city]" => "%{[resource][address][0][city]}"
    }
  }

  # enrich with registration facility
  if [resource][managingOrganization][reference] {
    mutate {
      add_field => {
        "[registration][facilityID]" => "%{[resource][managingOrganization][reference]}"
      }
    }

    mutate {
      gsub => ["[registration][facilityID]", "Organization/", ""]
    }

    elasticsearch {
      hosts => [ "es-analytics:9200" ]
      user => "elastic"
      password => "dev_password_only"
      index => "fhir-raw-organization"
      query => "resource.id:%{[registration][facilityID]}"
      fields => {
        "[resource][address]" => "[@metadata][address]"
        "[resource][name]" => "[registration][facility][name]"
        "[resource][identifier]" => "[@metadata][identifier]"
      }
      add_field => {
        "[registration][facility][country]" => "%{[@metadata][address][0][country]}"
        "[registration][facility][state]" => "%{[@metadata][address][0][state]}"
        "[registration][facility][district]" => "%{[@metadata][address][0][district]}"
        "[registration][facility][city]" => "%{[@metadata][address][0][city]}"
      }
      remove_field => ["[registration][facilityID]"]
    }

    ruby {
      code => '
        identifiers = event.get("[@metadata][identifier]")
        facilityCode = identifiers.find { |x| x["system"] == "http://test.org/identifier/hiv-organization"}["value"]
        event.set("[registration][facilityCode]", facilityCode)
      '
    }

    elasticsearch {
      hosts => [ "es-analytics:9200" ]
      user => "elastic"
      password => "dev_password_only"
      index => "fhir-raw-location"
      query => "resource.identifier.value:%{[registration][facilityCode]}"
      fields => {
        "[resource][position]" => "[registration][facility][position]"
      }
    }

    mutate {
      rename => {
        "[registration][facility][position][latitude]" => "[registration][facility][position][lat]"
        "[registration][facility][position][longitude]" => "[registration][facility][position][lon]"
      }
    }
  }

  # get identifiers
  ruby {
    code => '
      identifiers = event.get("[resource][identifier]")
      if identifiers
        nid = identifiers.find { |x| x["system"] == "http://openhie.org/fhir/hiv-casereporting/identifier/nid" }
        if nid
          event.set("[registration][NID]", nid["value"])
        end

          clientSourceId = identifiers.find { |x| !!(x["system"] =~ /http:\/\/openhie.org\/fhir\/hiv-casereporting\/identifier\/facility.*/) }
        if clientSourceId
          event.set("[registration][clientSourceId]", clientSourceId["value"])
        end
      end

      telecom = event.get("[resource][telecom]")
      if telecom
        tel = telecom.find { |x| x["system"] == "phone" }
        if tel
          event.set("[registration][tel]", tel["value"])
        end
      end
    '
  }

  # get extensions
  ruby {
    path => "/usr/share/logstash/pipeline/scripts/get_extension.rb"
    script_params => {
      "url" => "http://openhie.org/fhir/hiv-casereporting/StructureDefinition/key-population"
      "type" => "valueCodeableConcept"
      "source_field" => "[resource][extension]"
      "dest_field" => "[@metadata][keyPopulationStatus]"
    }
  }
  if [@metadata][keyPopulationStatus][coding][0][code] {
    # translate fhir codes to minimum dataset values
    translate {
      field => "[@metadata][keyPopulationStatus][coding][0][code]"
      destination => "[registration][keyPopulationStatus]"
      dictionary => {
        "GENERAL-POPULATION" => "General Population"
        "MSM" => "MSM"
        "FSW" => "FSW"
        "MSW" => "MSW"
        "PWID" => "PWID"
        "PWUD" => "PWUD"
        "TRANSGENDER" => "Transgender"
      }
      exact => true
      override => true
      fallback => "Error"
    }
  }

  # get marital status
  ruby {
    path => "/usr/share/logstash/pipeline/scripts/get_codeable_concept.rb"
    script_params => {
      "source_field" => "[resource][maritalStatus]"
      "system" => "http://terminology.hl7.org/CodeSystem/v3-MaritalStatus"
      "dest_field" => "[@metadata][maritalStatus]"
    }
  }
  if [@metadata][maritalStatus] {
    # translate fhir codes to minimum dataset values
    translate {
      field => "[@metadata][maritalStatus]"
      destination => "[registration][maritalStatus]"
      dictionary => {
        "S" => "Never Married"
        "M" => "Married"
        "P" => "Polygamous"
        "T" => "Domestic partner"
        "D" => "Divorced"
      }
      exact => true
      override => true
      fallback => "Error"
    }
  }

  # set document id
  mutate {
    add_field => {
      "[@metadata][id]" => "report-patient-%{[resource][id]}"
    }
  }

  prune {
    whitelist_names => [ "registration", "@timestamp" ]
  }
}

output {
  elasticsearch {
    hosts => [ "es-analytics:9200" ]
    index => "fhir-report-patient"
    document_id => "%{[@metadata][id]}"
    action => "update"
    doc_as_upsert => true
    user => "elastic"
    password => "dev_password_only"
  }
}
